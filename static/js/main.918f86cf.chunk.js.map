{"version":3,"sources":["storage.js","App.js","index.js"],"names":["load","key","serializedState","localStorage","getItem","undefined","JSON","parse","err","console","error","App","useState","setKey","value","setValue","cache","setCache","useEffect","a","storage","loadedCache","stringify","setItem","emptyFieldsLeft","handleInputChange","target","name","handleCacheElemChange","cacheElemToUpdate","closest","id","isNaN","className","type","placeholder","onChange","disabled","onClick","keyToSet","updatedCache","Object","keys","length","entries","map","cacheElem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAaA,EAAO,SAACC,GACnB,IACE,IAAMC,EAAkBC,aAAaC,QAAQH,GAE7C,OAA2B,OAApBC,OAA2BG,EAAYC,KAAKC,MAAML,GACzD,MAAOM,GACPC,QAAQC,MAAM,UAAWF,K,MCiGdG,MAnGf,WAAgB,IAAD,EACSC,mBAAS,IADlB,mBACNX,EADM,KACDY,EADC,OAEaD,mBAAS,IAFtB,mBAENE,EAFM,KAECC,EAFD,OAGaH,mBAAS,IAHtB,mBAGNI,EAHM,KAGCC,EAHD,KAKbC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEAC2BC,EAAa,SADxC,QACOC,EADP,SAEkBJ,EAASI,GAF3B,0CAAD,KAIC,IAEHH,qBAAU,YDNQ,SAACjB,EAAKa,GACxB,IACE,IAAMZ,EAAkBI,KAAKgB,UAAUR,GACvCX,aAAaoB,QAAQtB,EAAKC,GAC1B,MAAOM,GACPC,QAAQC,MAAM,UAAWF,ICEzBY,CAAa,QAASJ,KACrB,CAACA,IAEJ,IAAMQ,EAA0B,KAARvB,GAAwB,KAAVa,EAEhCW,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACX,QAAhBA,EAAOC,KAAiBd,EAAOa,EAAOZ,OAASC,EAASW,EAAOZ,QAkB3Dc,EAAwB,SAAC,GAAgB,IACvCC,EADsC,EAAbH,OACEI,QAAQ,MAAMC,GAC/ClB,EAAOmB,OAAOH,GAAqBA,GAAqBA,GACxDd,EAASC,EAAMa,KAGjB,OACE,yBAAKI,UAAU,OACb,wBAAIA,UAAU,SAAd,aACA,2BACEA,UAAU,cACVC,KAAK,OACLP,KAAK,MACLb,MAAOb,EACPkC,YAAY,YACZC,SAAUX,IAEZ,2BACEQ,UAAU,cACVC,KAAK,OACLP,KAAK,QACLb,MAAOA,EACPqB,YAAY,cACZC,SAAUX,IAGZ,4BACEQ,UAAS,mBAAcT,EAAkB,eAAiB,IAC1DU,KAAK,SACLG,SAAUb,EACVc,QA7CsB,WACtBtB,EAAM,IAAD,OAAKf,YAAee,EAAM,IAAD,OAAKf,IACnCe,EAAMf,WAAae,EAAMf,GAE7B,IAAMsC,EAAWP,OAAO/B,GAAOA,EAAd,WAAwBA,GACnCuC,EAAY,2BAAQxB,GAAR,kBAAgBuB,EAAWzB,IAEzC2B,OAAOC,KAAKF,GAAcG,OAAS,UAC9BH,EAAaC,OAAOC,KAAKF,GAAc,IAEhDvB,EAASuB,GACT3B,EAAO,IACPE,EAAS,MA6BP,QASkC,IAAjC0B,OAAOG,QAAQ5B,GAAO2B,QACrB,2BAAOV,UAAU,eACf,+BACE,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,cAAd,OACA,wBAAIA,UAAU,cAAd,UAEDQ,OAAOG,QAAQ5B,GAAO6B,KAAI,SAACC,GAAD,OACzB,wBACEf,GAAIe,EAAU,GACdb,UAAU,YACVhC,IAAK6C,EAAU,GACfR,QAASV,GAET,wBAAIK,UAAU,cACXD,OAAOc,EAAU,IAAMA,EAAU,IAAMA,EAAU,IAEpD,wBAAIb,UAAU,cAAca,EAAU,YCxFtDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.918f86cf.chunk.js","sourcesContent":["export const load = (key) => {\r\n  try {\r\n    const serializedState = localStorage.getItem(key);\r\n\r\n    return serializedState === null ? undefined : JSON.parse(serializedState);\r\n  } catch (err) {\r\n    console.error(\"Error: \", err);\r\n  }\r\n};\r\n\r\nexport const save = (key, value) => {\r\n  try {\r\n    const serializedState = JSON.stringify(value);\r\n    localStorage.setItem(key, serializedState);\r\n  } catch (err) {\r\n    console.error(\"Error: \", err);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport * as storage from \"./storage\";\nimport \"./App.css\";\n\nfunction App() {\n  const [key, setKey] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [cache, setCache] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      const loadedCache = await storage.load(\"cache\");\n      if (loadedCache) setCache(loadedCache);\n    })();\n  }, []);\n\n  useEffect(() => {\n    storage.save(\"cache\", cache);\n  }, [cache]);\n\n  const emptyFieldsLeft = key === \"\" || value === \"\";\n\n  const handleInputChange = ({ target }) => {\n    target.name === \"key\" ? setKey(target.value) : setValue(target.value);\n  };\n\n  const handleCacheElemSave = () => {\n    if (cache[`+${key}`]) delete cache[`+${key}`];\n    if (cache[key]) delete cache[key];\n\n    const keyToSet = isNaN(+key) ? key : `+${key}`;\n    const updatedCache = { ...cache, [keyToSet]: value };\n\n    if (Object.keys(updatedCache).length > 2)\n      delete updatedCache[Object.keys(updatedCache)[0]];\n\n    setCache(updatedCache);\n    setKey(\"\");\n    setValue(\"\");\n  };\n\n  const handleCacheElemChange = ({ target }) => {\n    const cacheElemToUpdate = target.closest(\"tr\").id;\n    setKey(isNaN(+cacheElemToUpdate) ? cacheElemToUpdate : +cacheElemToUpdate);\n    setValue(cache[cacheElemToUpdate]);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Cache App</h1>\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"key\"\n        value={key}\n        placeholder=\"Enter key\"\n        onChange={handleInputChange}\n      />\n      <input\n        className=\"input-field\"\n        type=\"text\"\n        name=\"value\"\n        value={value}\n        placeholder=\"Enter value\"\n        onChange={handleInputChange}\n      />\n\n      <button\n        className={`save-btn ${emptyFieldsLeft ? \"disabled-btn\" : \"\"}`}\n        type=\"button\"\n        disabled={emptyFieldsLeft}\n        onClick={handleCacheElemSave}\n      >\n        Save\n      </button>\n\n      {Object.entries(cache).length !== 0 && (\n        <table className=\"cache-table\">\n          <tbody>\n            <tr className=\"table-row\">\n              <th className=\"table-cell\">Key</th>\n              <th className=\"table-cell\">Value</th>\n            </tr>\n            {Object.entries(cache).map((cacheElem) => (\n              <tr\n                id={cacheElem[0]}\n                className=\"table-row\"\n                key={cacheElem[0]}\n                onClick={handleCacheElemChange}\n              >\n                <td className=\"table-cell\">\n                  {isNaN(+cacheElem[0]) ? cacheElem[0] : +cacheElem[0]}\n                </td>\n                <td className=\"table-cell\">{cacheElem[1]}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}